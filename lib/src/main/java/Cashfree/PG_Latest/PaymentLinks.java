/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package Cashfree.PG_Latest;

import Cashfree.PG_Latest.utils.HTTPClient;
import Cashfree.PG_Latest.utils.HTTPRequest;
import Cashfree.PG_Latest.utils.JSON;
import Cashfree.PG_Latest.utils.SerializedBody;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.net.http.HttpResponse;
import java.nio.charset.StandardCharsets;
import java.util.function.Function;
import java.util.stream.Collectors;

public class PaymentLinks {
	
	private SDKConfiguration sdkConfiguration;

	public PaymentLinks(SDKConfiguration sdkConfiguration) {
		this.sdkConfiguration = sdkConfiguration;
	}

    /**
     * Cancel Payment Link
     * Use this API to cancel a payment link. No further payments can be done against a cancelled link. Only a link in ACTIVE status can be cancelled.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public Cashfree.PG_Latest.models.operations.CancelPaymentLinkResponse cancelPaymentLink(Cashfree.PG_Latest.models.operations.CancelPaymentLinkRequest request) throws Exception {
        String baseUrl = this.sdkConfiguration.serverUrl;
        String url = Cashfree.PG_Latest.utils.Utils.generateURL(Cashfree.PG_Latest.models.operations.CancelPaymentLinkRequest.class, baseUrl, "/links/{link_id}/cancel", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);

        req.addHeader("Accept", "application/json");
        req.addHeader("user-agent", String.format("speakeasy-sdk/%s %s %s %s", this.sdkConfiguration.language, this.sdkConfiguration.sdkVersion, this.sdkConfiguration.genVersion, this.sdkConfiguration.openapiDocVersion));
        java.util.Map<String, java.util.List<String>> headers = Cashfree.PG_Latest.utils.Utils.getHeaders(request);
        if (headers != null) {
            for (java.util.Map.Entry<String, java.util.List<String>> header : headers.entrySet()) {
                for (String value : header.getValue()) {
                    req.addHeader(header.getKey(), value);
                }
            }
        }
        
        HTTPClient client = this.sdkConfiguration.defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        Cashfree.PG_Latest.models.operations.CancelPaymentLinkResponse res = new Cashfree.PG_Latest.models.operations.CancelPaymentLinkResponse(contentType, httpRes.statusCode()) {{
            linkCancelledResponse = null;
            linkCancelledError = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            res.headers = httpRes.headers().map().keySet().stream().collect(Collectors.toMap(Function.identity(), k -> httpRes.headers().allValues(k).toArray(new String[0])));
            
            if (Cashfree.PG_Latest.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Cashfree.PG_Latest.models.shared.LinkCancelledResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Cashfree.PG_Latest.models.shared.LinkCancelledResponse.class);
                res.linkCancelledResponse = out;
            }
        }
        else if (httpRes.statusCode() == 400) {
            res.headers = httpRes.headers().map().keySet().stream().collect(Collectors.toMap(Function.identity(), k -> httpRes.headers().allValues(k).toArray(new String[0])));
            
            if (Cashfree.PG_Latest.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Cashfree.PG_Latest.models.shared.LinkCancelledError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Cashfree.PG_Latest.models.shared.LinkCancelledError.class);
                res.linkCancelledError = out;
            }
        }

        return res;
    }

    /**
     * Create Payment Link
     * Use this API to create a new payment link. The created payment link url will be available in the API response parameter link_url.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public Cashfree.PG_Latest.models.operations.CreatePaymentLinkResponse createPaymentLink(Cashfree.PG_Latest.models.operations.CreatePaymentLinkRequest request) throws Exception {
        String baseUrl = this.sdkConfiguration.serverUrl;
        String url = Cashfree.PG_Latest.utils.Utils.generateURL(baseUrl, "/links");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = Cashfree.PG_Latest.utils.Utils.serializeRequestBody(request, "createLinkRequest", "json");
        req.setBody(serializedRequestBody);

        req.addHeader("Accept", "application/json");
        req.addHeader("user-agent", String.format("speakeasy-sdk/%s %s %s %s", this.sdkConfiguration.language, this.sdkConfiguration.sdkVersion, this.sdkConfiguration.genVersion, this.sdkConfiguration.openapiDocVersion));
        java.util.Map<String, java.util.List<String>> headers = Cashfree.PG_Latest.utils.Utils.getHeaders(request);
        if (headers != null) {
            for (java.util.Map.Entry<String, java.util.List<String>> header : headers.entrySet()) {
                for (String value : header.getValue()) {
                    req.addHeader(header.getKey(), value);
                }
            }
        }
        
        HTTPClient client = this.sdkConfiguration.defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        Cashfree.PG_Latest.models.operations.CreatePaymentLinkResponse res = new Cashfree.PG_Latest.models.operations.CreatePaymentLinkResponse(contentType, httpRes.statusCode()) {{
            linkResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            res.headers = httpRes.headers().map().keySet().stream().collect(Collectors.toMap(Function.identity(), k -> httpRes.headers().allValues(k).toArray(new String[0])));
            
            if (Cashfree.PG_Latest.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Cashfree.PG_Latest.models.shared.LinkResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Cashfree.PG_Latest.models.shared.LinkResponse.class);
                res.linkResponse = out;
            }
        }

        return res;
    }

    /**
     * Fetch Payment Link Details
     * Use this API to view all details and status of a payment link.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public Cashfree.PG_Latest.models.operations.GetPaymentLinkDetailsResponse getPaymentLinkDetails(Cashfree.PG_Latest.models.operations.GetPaymentLinkDetailsRequest request) throws Exception {
        String baseUrl = this.sdkConfiguration.serverUrl;
        String url = Cashfree.PG_Latest.utils.Utils.generateURL(Cashfree.PG_Latest.models.operations.GetPaymentLinkDetailsRequest.class, baseUrl, "/links/{link_id}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);

        req.addHeader("Accept", "application/json");
        req.addHeader("user-agent", String.format("speakeasy-sdk/%s %s %s %s", this.sdkConfiguration.language, this.sdkConfiguration.sdkVersion, this.sdkConfiguration.genVersion, this.sdkConfiguration.openapiDocVersion));
        java.util.Map<String, java.util.List<String>> headers = Cashfree.PG_Latest.utils.Utils.getHeaders(request);
        if (headers != null) {
            for (java.util.Map.Entry<String, java.util.List<String>> header : headers.entrySet()) {
                for (String value : header.getValue()) {
                    req.addHeader(header.getKey(), value);
                }
            }
        }
        
        HTTPClient client = this.sdkConfiguration.defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        Cashfree.PG_Latest.models.operations.GetPaymentLinkDetailsResponse res = new Cashfree.PG_Latest.models.operations.GetPaymentLinkDetailsResponse(contentType, httpRes.statusCode()) {{
            linkResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            res.headers = httpRes.headers().map().keySet().stream().collect(Collectors.toMap(Function.identity(), k -> httpRes.headers().allValues(k).toArray(new String[0])));
            
            if (Cashfree.PG_Latest.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Cashfree.PG_Latest.models.shared.LinkResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Cashfree.PG_Latest.models.shared.LinkResponse.class);
                res.linkResponse = out;
            }
        }

        return res;
    }

    /**
     * Get Orders for a Payment Link
     * Use this API to view all order details for a payment link.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public Cashfree.PG_Latest.models.operations.GetPaymentLinkOrdersResponse getPaymentLinkOrders(Cashfree.PG_Latest.models.operations.GetPaymentLinkOrdersRequest request) throws Exception {
        String baseUrl = this.sdkConfiguration.serverUrl;
        String url = Cashfree.PG_Latest.utils.Utils.generateURL(Cashfree.PG_Latest.models.operations.GetPaymentLinkOrdersRequest.class, baseUrl, "/links/{link_id}/orders", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);

        req.addHeader("Accept", "application/json");
        req.addHeader("user-agent", String.format("speakeasy-sdk/%s %s %s %s", this.sdkConfiguration.language, this.sdkConfiguration.sdkVersion, this.sdkConfiguration.genVersion, this.sdkConfiguration.openapiDocVersion));
        java.util.Map<String, java.util.List<String>> headers = Cashfree.PG_Latest.utils.Utils.getHeaders(request);
        if (headers != null) {
            for (java.util.Map.Entry<String, java.util.List<String>> header : headers.entrySet()) {
                for (String value : header.getValue()) {
                    req.addHeader(header.getKey(), value);
                }
            }
        }
        
        HTTPClient client = this.sdkConfiguration.defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        Cashfree.PG_Latest.models.operations.GetPaymentLinkOrdersResponse res = new Cashfree.PG_Latest.models.operations.GetPaymentLinkOrdersResponse(contentType, httpRes.statusCode()) {{
            linkOrdersResponses = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            res.headers = httpRes.headers().map().keySet().stream().collect(Collectors.toMap(Function.identity(), k -> httpRes.headers().allValues(k).toArray(new String[0])));
            
            if (Cashfree.PG_Latest.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Cashfree.PG_Latest.models.shared.LinkOrdersResponse[] out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Cashfree.PG_Latest.models.shared.LinkOrdersResponse[].class);
                res.linkOrdersResponses = out;
            }
        }

        return res;
    }
}