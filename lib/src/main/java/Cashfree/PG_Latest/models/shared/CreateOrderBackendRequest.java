/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package Cashfree.PG_Latest.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;


public class CreateOrderBackendRequest {
    /**
     * The customer details that are necessary. Note that you can pass dummy details if your use case does not require the customer details.
     */
    @JsonProperty("customer_details")
    public CustomerDetails customerDetails;

    public CreateOrderBackendRequest withCustomerDetails(CustomerDetails customerDetails) {
        this.customerDetails = customerDetails;
        return this;
    }
    
    /**
     * Bill amount for the order. Provide upto two decimals. 10.15 means Rs 10 and 15 paisa
     */
    @JsonProperty("order_amount")
    public Double orderAmount;

    public CreateOrderBackendRequest withOrderAmount(Double orderAmount) {
        this.orderAmount = orderAmount;
        return this;
    }
    
    /**
     * Currency for the order. INR if left empty. Contact care@cashfree.com to enable new currencies. 
     */
    @JsonProperty("order_currency")
    public String orderCurrency;

    public CreateOrderBackendRequest withOrderCurrency(String orderCurrency) {
        this.orderCurrency = orderCurrency;
        return this;
    }
    
    /**
     * Time after which the order expires. Customers will not be able to make the payment beyond the time specified here. We store timestamps in IST, but you can provide them in a valid ISO 8601 time format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("order_expiry_time")
    public String orderExpiryTime;

    public CreateOrderBackendRequest withOrderExpiryTime(String orderExpiryTime) {
        this.orderExpiryTime = orderExpiryTime;
        return this;
    }
    
    /**
     * Order identifier present in your system. Alphanumeric and only - and _ allowed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("order_id")
    public String orderId;

    public CreateOrderBackendRequest withOrderId(String orderId) {
        this.orderId = orderId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("order_meta")
    public OrderMeta orderMeta;

    public CreateOrderBackendRequest withOrderMeta(OrderMeta orderMeta) {
        this.orderMeta = orderMeta;
        return this;
    }
    
    /**
     * Order note for reference.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("order_note")
    public String orderNote;

    public CreateOrderBackendRequest withOrderNote(String orderNote) {
        this.orderNote = orderNote;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("order_splits")
    public VendorSplit[] orderSplits;

    public CreateOrderBackendRequest withOrderSplits(VendorSplit[] orderSplits) {
        this.orderSplits = orderSplits;
        return this;
    }
    
    /**
     * Custom Tags which can be passed for an order. A maximum of 6 tags can be added
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("order_tags")
    public java.util.Map<String, String> orderTags;

    public CreateOrderBackendRequest withOrderTags(java.util.Map<String, String> orderTags) {
        this.orderTags = orderTags;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("terminal")
    public TerminalDetails terminal;

    public CreateOrderBackendRequest withTerminal(TerminalDetails terminal) {
        this.terminal = terminal;
        return this;
    }
    
    public CreateOrderBackendRequest(@JsonProperty("customer_details") CustomerDetails customerDetails, @JsonProperty("order_amount") Double orderAmount, @JsonProperty("order_currency") String orderCurrency) {
        this.customerDetails = customerDetails;
        this.orderAmount = orderAmount;
        this.orderCurrency = orderCurrency;
  }
}
