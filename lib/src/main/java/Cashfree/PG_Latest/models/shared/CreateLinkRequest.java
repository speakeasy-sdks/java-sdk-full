/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package Cashfree.PG_Latest.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;


public class CreateLinkRequest {
    @JsonProperty("customer_details")
    public LinkCustomerDetailsEntity customerDetails;

    public CreateLinkRequest withCustomerDetails(LinkCustomerDetailsEntity customerDetails) {
        this.customerDetails = customerDetails;
        return this;
    }
    
    /**
     * Amount to be collected using this link. Provide upto two decimals for paise.
     */
    @JsonProperty("link_amount")
    public Double linkAmount;

    public CreateLinkRequest withLinkAmount(Double linkAmount) {
        this.linkAmount = linkAmount;
        return this;
    }
    
    /**
     * If "true", reminders will be sent to customers for collecting payments.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("link_auto_reminders")
    public Boolean linkAutoReminders;

    public CreateLinkRequest withLinkAutoReminders(Boolean linkAutoReminders) {
        this.linkAutoReminders = linkAutoReminders;
        return this;
    }
    
    /**
     * Currency for the payment link. Default is INR. Contact care@cashfree.com to enable new currencies.
     */
    @JsonProperty("link_currency")
    public String linkCurrency;

    public CreateLinkRequest withLinkCurrency(String linkCurrency) {
        this.linkCurrency = linkCurrency;
        return this;
    }
    
    /**
     * Time after which the link expires. Customers will not be able to make the payment beyond the time specified here. You can provide them in a valid ISO 8601 time format. Default is 30 days.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("link_expiry_time")
    public String linkExpiryTime;

    public CreateLinkRequest withLinkExpiryTime(String linkExpiryTime) {
        this.linkExpiryTime = linkExpiryTime;
        return this;
    }
    
    /**
     * Unique Identifier (provided by merchant) for the Link. Alphanumeric and only - and _ allowed (50 character limit). Use this for other link-related APIs.
     */
    @JsonProperty("link_id")
    public String linkId;

    public CreateLinkRequest withLinkId(String linkId) {
        this.linkId = linkId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("link_meta")
    public LinkMetaEntity linkMeta;

    public CreateLinkRequest withLinkMeta(LinkMetaEntity linkMeta) {
        this.linkMeta = linkMeta;
        return this;
    }
    
    /**
     * Minimum amount in first installment that needs to be paid by the customer if partial payments are enabled. This should be less than the link_amount.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("link_minimum_partial_amount")
    public Double linkMinimumPartialAmount;

    public CreateLinkRequest withLinkMinimumPartialAmount(Double linkMinimumPartialAmount) {
        this.linkMinimumPartialAmount = linkMinimumPartialAmount;
        return this;
    }
    
    /**
     * Key-value pair that can be used to store additional information about the entity. Maximum 5 key-value pairs
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("link_notes")
    public java.util.Map<String, String> linkNotes;

    public CreateLinkRequest withLinkNotes(java.util.Map<String, String> linkNotes) {
        this.linkNotes = linkNotes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("link_notify")
    public LinkNotifyEntity linkNotify;

    public CreateLinkRequest withLinkNotify(LinkNotifyEntity linkNotify) {
        this.linkNotify = linkNotify;
        return this;
    }
    
    /**
     * If "true", customer can make partial payments for the link.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("link_partial_payments")
    public Boolean linkPartialPayments;

    public CreateLinkRequest withLinkPartialPayments(Boolean linkPartialPayments) {
        this.linkPartialPayments = linkPartialPayments;
        return this;
    }
    
    /**
     * A brief description for which payment must be collected. This is shown to the customer.
     */
    @JsonProperty("link_purpose")
    public String linkPurpose;

    public CreateLinkRequest withLinkPurpose(String linkPurpose) {
        this.linkPurpose = linkPurpose;
        return this;
    }
    
    public CreateLinkRequest(@JsonProperty("customer_details") LinkCustomerDetailsEntity customerDetails, @JsonProperty("link_amount") Double linkAmount, @JsonProperty("link_currency") String linkCurrency, @JsonProperty("link_id") String linkId, @JsonProperty("link_purpose") String linkPurpose) {
        this.customerDetails = customerDetails;
        this.linkAmount = linkAmount;
        this.linkCurrency = linkCurrency;
        this.linkId = linkId;
        this.linkPurpose = linkPurpose;
  }
}
