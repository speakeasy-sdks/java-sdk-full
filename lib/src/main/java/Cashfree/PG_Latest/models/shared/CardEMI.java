/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package Cashfree.PG_Latest.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;


public class CardEMI {
    /**
     * Card alias as returned by Cashfree Vault API
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("card_alias")
    public String cardAlias;

    public CardEMI withCardAlias(String cardAlias) {
        this.cardAlias = cardAlias;
        return this;
    }
    
    /**
     * Card bank name, required for EMI payments. This is the bank user has selected for EMI. One of ["hdfc, "kotak", "icici", "rbl", "bob", "standard chartered", "axis", "au", "yes", "sbi", "fed", "hsbc", "citi", "amex"]
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("card_bank_name")
    public CardEMICardBankName cardBankName;

    public CardEMI withCardBankName(CardEMICardBankName cardBankName) {
        this.cardBankName = cardBankName;
        return this;
    }
    
    /**
     * CVV mentioned on the card.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("card_cvv")
    public String cardCvv;

    public CardEMI withCardCvv(String cardCvv) {
        this.cardCvv = cardCvv;
        return this;
    }
    
    /**
     * Card expiry month.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("card_expiry_mm")
    public String cardExpiryMm;

    public CardEMI withCardExpiryMm(String cardExpiryMm) {
        this.cardExpiryMm = cardExpiryMm;
        return this;
    }
    
    /**
     * Card expiry year.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("card_expiry_yy")
    public String cardExpiryYy;

    public CardEMI withCardExpiryYy(String cardExpiryYy) {
        this.cardExpiryYy = cardExpiryYy;
        return this;
    }
    
    /**
     * Customer name mentioned on the card.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("card_holder_name")
    public String cardHolderName;

    public CardEMI withCardHolderName(String cardHolderName) {
        this.cardHolderName = cardHolderName;
        return this;
    }
    
    /**
     * Customer card number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("card_number")
    public String cardNumber;

    public CardEMI withCardNumber(String cardNumber) {
        this.cardNumber = cardNumber;
        return this;
    }
    
    /**
     * The channel for card payments will always be "link"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("channel")
    public String channel;

    public CardEMI withChannel(String channel) {
        this.channel = channel;
        return this;
    }
    
    /**
     * EMI tenure selected by the user
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("emi_tenure")
    public Long emiTenure;

    public CardEMI withEmiTenure(Long emiTenure) {
        this.emiTenure = emiTenure;
        return this;
    }
    
    public CardEMI(){}
}
