/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package Cashfree.PG_Latest.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * FetchAllSavedInstruments - OK
 */

public class FetchAllSavedInstruments {
    /**
     * cf_payment_id of the successful transaction done while saving instrument
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("afa_reference")
    public Long afaReference;

    public FetchAllSavedInstruments withAfaReference(Long afaReference) {
        this.afaReference = afaReference;
        return this;
    }
    
    /**
     * Timestamp at which instrument was saved.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created_at")
    public String createdAt;

    public FetchAllSavedInstruments withCreatedAt(String createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * customer_id for which the instrument was saved
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customer_id")
    public String customerId;

    public FetchAllSavedInstruments withCustomerId(String customerId) {
        this.customerId = customerId;
        return this;
    }
    
    /**
     * masked card number displayed to the customer
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instrument_display")
    public String instrumentDisplay;

    public FetchAllSavedInstruments withInstrumentDisplay(String instrumentDisplay) {
        this.instrumentDisplay = instrumentDisplay;
        return this;
    }
    
    /**
     * saved instrument id
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instrument_id")
    public String instrumentId;

    public FetchAllSavedInstruments withInstrumentId(String instrumentId) {
        this.instrumentId = instrumentId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instrument_meta")
    public SavedInstrumentMeta instrumentMeta;

    public FetchAllSavedInstruments withInstrumentMeta(SavedInstrumentMeta instrumentMeta) {
        this.instrumentMeta = instrumentMeta;
        return this;
    }
    
    /**
     * Status of the saved instrument.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instrument_status")
    public FetchAllSavedInstrumentsInstrumentStatus instrumentStatus;

    public FetchAllSavedInstruments withInstrumentStatus(FetchAllSavedInstrumentsInstrumentStatus instrumentStatus) {
        this.instrumentStatus = instrumentStatus;
        return this;
    }
    
    /**
     * Type of the saved instrument
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instrument_type")
    public FetchAllSavedInstrumentsInstrumentType instrumentType;

    public FetchAllSavedInstruments withInstrumentType(FetchAllSavedInstrumentsInstrumentType instrumentType) {
        this.instrumentType = instrumentType;
        return this;
    }
    
    /**
     * Unique id for the saved instrument
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instrument_uid")
    public String instrumentUid;

    public FetchAllSavedInstruments withInstrumentUid(String instrumentUid) {
        this.instrumentUid = instrumentUid;
        return this;
    }
    
    public FetchAllSavedInstruments(){}
}
