/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package Cashfree.PG_Latest;

import Cashfree.PG_Latest.utils.HTTPClient;
import Cashfree.PG_Latest.utils.HTTPRequest;
import Cashfree.PG_Latest.utils.JSON;
import Cashfree.PG_Latest.utils.SerializedBody;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.net.http.HttpResponse;
import java.nio.charset.StandardCharsets;
import java.util.function.Function;
import java.util.stream.Collectors;

public class EligibilityAPIs {
	
	private SDKConfiguration sdkConfiguration;

	public EligibilityAPIs(SDKConfiguration sdkConfiguration) {
		this.sdkConfiguration = sdkConfiguration;
	}

    /**
     * Get eligible Cardless EMI
     * Use this API to get eligible Cardless EMI Payment Methods for a customer on an order.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public Cashfree.PG_Latest.models.operations.EligibilityCardlessEMIResponse eligibilityCardlessEMI(Cashfree.PG_Latest.models.operations.EligibilityCardlessEMIRequest request) throws Exception {
        String baseUrl = this.sdkConfiguration.serverUrl;
        String url = Cashfree.PG_Latest.utils.Utils.generateURL(baseUrl, "/eligibility/cardlessemi");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = Cashfree.PG_Latest.utils.Utils.serializeRequestBody(request, "eligibilityCardlessEMIRequest", "json");
        req.setBody(serializedRequestBody);

        req.addHeader("Accept", "application/json");
        req.addHeader("user-agent", String.format("speakeasy-sdk/%s %s %s %s", this.sdkConfiguration.language, this.sdkConfiguration.sdkVersion, this.sdkConfiguration.genVersion, this.sdkConfiguration.openapiDocVersion));
        java.util.Map<String, java.util.List<String>> headers = Cashfree.PG_Latest.utils.Utils.getHeaders(request);
        if (headers != null) {
            for (java.util.Map.Entry<String, java.util.List<String>> header : headers.entrySet()) {
                for (String value : header.getValue()) {
                    req.addHeader(header.getKey(), value);
                }
            }
        }
        
        HTTPClient client = this.sdkConfiguration.defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        Cashfree.PG_Latest.models.operations.EligibilityCardlessEMIResponse res = new Cashfree.PG_Latest.models.operations.EligibilityCardlessEMIResponse(contentType, httpRes.statusCode()) {{
            eligibleCardlessEMIEntities = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            res.headers = httpRes.headers().map().keySet().stream().collect(Collectors.toMap(Function.identity(), k -> httpRes.headers().allValues(k).toArray(new String[0])));
            
            if (Cashfree.PG_Latest.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Cashfree.PG_Latest.models.shared.EligibleCardlessEMIEntity[] out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Cashfree.PG_Latest.models.shared.EligibleCardlessEMIEntity[].class);
                res.eligibleCardlessEMIEntities = out;
            }
        }

        return res;
    }

    /**
     * Get eligible Offers
     * Use this API to get eligible offers for an order or amount.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public Cashfree.PG_Latest.models.operations.EligibilityOfferResponse eligibilityOffer(Cashfree.PG_Latest.models.operations.EligibilityOfferRequest request) throws Exception {
        String baseUrl = this.sdkConfiguration.serverUrl;
        String url = Cashfree.PG_Latest.utils.Utils.generateURL(baseUrl, "/eligibility/offers");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = Cashfree.PG_Latest.utils.Utils.serializeRequestBody(request, "eligibilityOffersRequest", "json");
        req.setBody(serializedRequestBody);

        req.addHeader("Accept", "application/json");
        req.addHeader("user-agent", String.format("speakeasy-sdk/%s %s %s %s", this.sdkConfiguration.language, this.sdkConfiguration.sdkVersion, this.sdkConfiguration.genVersion, this.sdkConfiguration.openapiDocVersion));
        java.util.Map<String, java.util.List<String>> headers = Cashfree.PG_Latest.utils.Utils.getHeaders(request);
        if (headers != null) {
            for (java.util.Map.Entry<String, java.util.List<String>> header : headers.entrySet()) {
                for (String value : header.getValue()) {
                    req.addHeader(header.getKey(), value);
                }
            }
        }
        
        HTTPClient client = this.sdkConfiguration.defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        Cashfree.PG_Latest.models.operations.EligibilityOfferResponse res = new Cashfree.PG_Latest.models.operations.EligibilityOfferResponse(contentType, httpRes.statusCode()) {{
            eligibleOffersEntities = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            res.headers = httpRes.headers().map().keySet().stream().collect(Collectors.toMap(Function.identity(), k -> httpRes.headers().allValues(k).toArray(new String[0])));
            
            if (Cashfree.PG_Latest.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Cashfree.PG_Latest.models.shared.EligibleOffersEntity[] out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Cashfree.PG_Latest.models.shared.EligibleOffersEntity[].class);
                res.eligibleOffersEntities = out;
            }
        }

        return res;
    }

    /**
     * Get eligible Paylater
     * Use this API to get eligible Paylater Payment Methods for a customer on an order.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public Cashfree.PG_Latest.models.operations.EligibilityPaylaterResponse eligibilityPaylater(Cashfree.PG_Latest.models.operations.EligibilityPaylaterRequest request) throws Exception {
        String baseUrl = this.sdkConfiguration.serverUrl;
        String url = Cashfree.PG_Latest.utils.Utils.generateURL(baseUrl, "/eligibility/paylater");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = Cashfree.PG_Latest.utils.Utils.serializeRequestBody(request, "eligibilityCardlessEMIRequest", "json");
        req.setBody(serializedRequestBody);

        req.addHeader("Accept", "application/json");
        req.addHeader("user-agent", String.format("speakeasy-sdk/%s %s %s %s", this.sdkConfiguration.language, this.sdkConfiguration.sdkVersion, this.sdkConfiguration.genVersion, this.sdkConfiguration.openapiDocVersion));
        java.util.Map<String, java.util.List<String>> headers = Cashfree.PG_Latest.utils.Utils.getHeaders(request);
        if (headers != null) {
            for (java.util.Map.Entry<String, java.util.List<String>> header : headers.entrySet()) {
                for (String value : header.getValue()) {
                    req.addHeader(header.getKey(), value);
                }
            }
        }
        
        HTTPClient client = this.sdkConfiguration.defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        Cashfree.PG_Latest.models.operations.EligibilityPaylaterResponse res = new Cashfree.PG_Latest.models.operations.EligibilityPaylaterResponse(contentType, httpRes.statusCode()) {{
            eligiblePaylaters = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            res.headers = httpRes.headers().map().keySet().stream().collect(Collectors.toMap(Function.identity(), k -> httpRes.headers().allValues(k).toArray(new String[0])));
            
            if (Cashfree.PG_Latest.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Cashfree.PG_Latest.models.shared.EligiblePaylater[] out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Cashfree.PG_Latest.models.shared.EligiblePaylater[].class);
                res.eligiblePaylaters = out;
            }
        }

        return res;
    }
}